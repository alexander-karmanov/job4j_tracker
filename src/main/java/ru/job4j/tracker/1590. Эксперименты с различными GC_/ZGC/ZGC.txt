Использование ZGC.

Размер хипа был увеличен: -Xmx4g -Xms512m.
Ключ запуска: -XX:+UseZGC -Xmx4g -Xms512m -Xlog:gc:log.txt

Запуск программы:
14:42

При запуске в heap поступило около 348 Mb объектов:
z_001.jpg

Количество объектов каждого типа в Sampler при запуске программы:
z_002.jpg

14:45
Создание массива на 250 000 элементов:
z_003.jpg

Количество объектов в массиве byte[] увеличилось:
z_004.jpg

Сортировка слиянием:
14:48
MergeSort Начало сортировки - 14:48:04.018734900
MergeSort Конец сортировки - 14:48:04.186630900
Сортировка заняла около 17 миллисекунд.
После 14:50 были небольшая сборка мусора.
На диаграмме наблюдается скачок, показывающий эту сортировку:
z_005.jpg


Сортировка методом вставки:
InsertSort Начало сортировки - 14:52:07.430652
InsertSort Конец сортировки - 14:52:37.377429700
Процесс сортировки вставками шел 30 секунд, отражение на графике:
z_006.jpg

Сортировка пузырьком:
BubbleSort Начало сортировки - 14:55:01.650384100
BubbleSort Конец сортировки - 14:57:28.032192600
Сортировка пузырьком шла дольше всего по времени – 2 минуты 27 секунд.
Отражение сортировки на графике:
z_007.jpg

Графики CPU и Heap, c выделением всех трех сортировок:
z_008.jpg

Логи Z Garbage Collector более подробные по сравнению с другими сборщиками мусора.
Несколько раз наблюдалась остановка приложения для работы сборщика мусора:
[26.561s][info][gc] GC(9) Garbage Collection (Allocation Stall) 12M(100%)->10M(83%)
[26.561s][info][gc] Allocation Stall (main) 9.649ms
[26.595s][info][gc] Allocation Stall (main) 9.198ms
[26.597s][info][gc] GC(10) Garbage Collection (Allocation Stall) 12M(100%)->10M(83%)
[26.613s][info][gc] Relocation Stall (main) 0.937ms
[26.613s][info][gc] GC(11) Garbage Collection (Allocation Stall) 12M(100%)->10M(83%)
