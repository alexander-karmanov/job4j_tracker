Использование G1GC.

Ключ запуска: -XX:+UseG1GC -Xmx12m -Xms12m -Xlog:gc:log.txt
Запуск меню программы:
22:03
При запуске в heap поступило около 500 Mb объектов, затем наблюдается небольшая сборка мусора:
g1_001.jpg

22:04
Количество объектов каждого типа в Sampler при запуске программы:
g1_002.jpg

22:06
Создание массива на 250 000 элементов:
g1_003.jpg

При этом массив byte[] увеличился:
g1_004.jpg

Сортировка слиянием.
MergeSort Начало сортировки - 22:08:03.070486600
MergeSort Конец сортировки - 22:08:03.172422
Сортировка заняла около 10 миллисекунд. 
На диаграмме наблюдается скачок, показывающий эту сортировку:
g1_005.jpg


Сортировка вставками:
22.11
InsertSort Начало сортировки - 22:11:07.994324800
InsertSort Конец сортировки - 22:11:35.283519300
Процесс сортировки вставками шел 28 секунд.
После этого наблюдается малая сборка мусора:
g1_006.jpg


Сортировка пузырьком:
22:14
BubbleSort Начало сортировки - 22:14:02.842617200
BubbleSort Конец сортировки - 22:16:25.001919300
Данная сортировка шла дольше всего по времени – 2 минуты 23 секунды.
Сортировка пузырьком и дальнейшая сбора мусора на графике:
g1_007.jpg

Количество объектов после сортировки в самплере:
g1_008.jpg

Каждая из сортировок на графиках CPU и Heap:
g1_009.jpg

Согласно логу, были малые сборки мусора, пример:
[279.746s][info][gc] GC(14) Pause Young (Normal) (G1 Evacuation Pause) 7M->5M(12M) 0.229ms
[279.750s][info][gc] GC(15) Pause Young (Normal) (G1 Evacuation Pause) 7M->5M(12M) 0.329ms
